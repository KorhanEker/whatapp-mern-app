{"version":3,"sources":["SidebarChat.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","className","Avatar","Sidebar","src","IconButton","SearchOutlined","placeholder","type","require","config","instance","axios","create","baseURL","timeout","Chat","messages","useState","input","setInput","sendMessage","event","a","preventDefault","post","message","name","received","AttachFile","map","Date","createdAt","toUTCString","value","onChange","e","target","onClick","App","setMessages","useEffect","get","then","response","console","log","data","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b22c2f54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarChat.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nfunction SidebarChat() {\r\n  return (\r\n    <div className=\"sidebarChat\">\r\n      <Avatar />\r\n      <div className=\"sidebarChat__info\">\r\n        <h2>Room Name</h2>\r\n        <p>This is the last message</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src=\"https://tse4.mm.bing.net/th/id/OIP._LFsWQepN7j9k0N2Bn_32gHaH_?pid=ImgDet&rs=1\" />\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlined />\r\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat />\r\n        <SidebarChat />\r\n        <SidebarChat />\r\n        <SidebarChat />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n// @ts-check\r\nconst API_URL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://korhan-whatsapp-clone.herokuapp.com/api\"\r\n    : \"http://localhost:9000/\";\r\n// @ts-check\r\nconst instance = axios.create({\r\n  baseURL: `${API_URL}`,\r\n  timeout: 5000,\r\n});\r\n\r\nexport default instance;\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport axios from \"./axios\";\r\n\r\n// normally props comes in here but we destruct it and say \"give me messages\"\r\nfunction Chat({ messages }) {\r\n  const [input, setInput] = useState([]);\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    await axios.post(\"/messages/new\", {\r\n      message: input,\r\n      name: \"DEMO APP\",\r\n      received: false,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>Room Name</h3>\r\n          <p>Last seen at...</p>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <p\r\n              className={`chat__message ${\r\n                message.received && \"chat__receiver\"\r\n              }`}\r\n            >\r\n              <span className=\"chat__name\">{message.name}</span>\r\n              {message.message}\r\n              <span className=\"chat__timestamp\">\r\n                {new Date(message.createdAt).toUTCString()}\r\n              </span>\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { useEffect, useState } from \"react\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/messages/sync\").then((response) => {\n      console.log(response.data);\n      setMessages(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    // when the App component loads, run this code once.\n    const pusher = new Pusher(\"757dbb443cdaa980d8a6\", {\n      cluster: \"eu\",\n    });\n    const channel = pusher.subscribe(\"messages\"); // we get this from pusher.trigger statement in server.js.\n    channel.bind(\"inserted\", (newMessage) => {\n      // alert(JSON.stringify(newMessage));\n      setMessages([...messages, newMessage]);\n    });\n\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [messages]);\n\n  console.log(messages);\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n        <Sidebar />\n        <Chat messages={messages} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}